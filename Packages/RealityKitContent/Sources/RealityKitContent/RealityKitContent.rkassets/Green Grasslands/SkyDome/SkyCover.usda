#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["HierarchicalFade", "RCP_BehaviorsContainer", "OnAddedToScene", "Sky_Dome"]
    def "Sky_Dome" (
        references = @SkyDome.usdz@
    )
    {
        float2 ui:nodegraph:node:pos = (-309.63458, 308.26846)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (11, 11, 11)
        float3 xformOp:translate = (0, -60, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        over "Ground_01" (
            active = false
        )
        {
        }

        over "Grid" (
            active = false
        )
        {
        }

        over "Looks"
        {
            over "GroundMATSG" (
                active = false
            )
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "GridMATSG" (
                active = false
            )
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
            }

            over "DomeMATSG"
            {
                asset inputs:image = @autumn_field_8k.hdr@ (
                    customData = {
                        dictionary realitykit = {
                            float2 positionInSubgraph = (-809.14417, 22.825876)
                            int stackingOrderInSubgraph = 15
                        }
                    }
                )
                token outputs:mtlx:surface.connect = </Root/Sky_Dome/Looks/DomeMATSG/UnlitSurface.outputs:out>
                token outputs:realitykit:vertex
                token outputs:surface.connect = None
                float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (112.375, 110.5)

                over "DomeMAT" (
                    active = false
                )
                {
                    color3f inputs:diffuseColor = (0.08266256, 0.08266256, 0.08266256) (
                        colorSpace = "srgb_displayp3"
                    )
                    color3f inputs:diffuseColor.connect = </Root/SkyDome/Looks/DomeMATSG/diffuseColor.outputs:rgb>
                    float inputs:opacity = 0.8
                }

                def Shader "diffuseColor"
                {
                    uniform token info:id = "UsdUVTexture"
                    asset inputs:file = @rogland_clear_night_4k.hdr@
                    float2 inputs:st.connect = </Root/Sky_Dome/Looks/DomeMATSG/diffuseColor/TexCoordReader.outputs:result>
                    color3f outputs:rgb

                    def Shader "TexCoordReader"
                    {
                        uniform token info:id = "UsdPrimvarReader_float2"
                        token inputs:varname.connect = </Root/Sky_Dome/Looks/DomeMATSG.inputs:frame:stPrimvarName>
                        float2 outputs:result
                    }
                }

                def Shader "Image2D"
                {
                    uniform token info:id = "ND_RealityKitTexture2D_color3"
                    string inputs:border_color
                    float inputs:dynamic_min_lod_clamp
                    asset inputs:file.connect = </Root/Sky_Dome/Looks/DomeMATSG.inputs:image>
                    bool inputs:no_flip_v = 1
                    int2 inputs:offset
                    string inputs:u_wrap_mode
                    string inputs:v_wrap_mode
                    color3f outputs:out
                    float2 ui:nodegraph:node:pos = (-612.54767, 89.80469)
                    int ui:nodegraph:node:stackingOrder = 34
                }

                def Shader "Position"
                {
                    uniform token info:id = "ND_position_vector3"
                    string inputs:space = "world"
                    float3 outputs:out
                    float2 ui:nodegraph:node:pos = (-1485.6512, 391.30722)
                    int ui:nodegraph:node:stackingOrder = 1172
                }

                def Shader "Separate3"
                {
                    uniform token info:id = "ND_separate3_vector3"
                    float3 inputs:in.connect = </Root/Sky_Dome/Looks/DomeMATSG/Position.outputs:out>
                    float outputs:outx
                    float outputs:outy
                    float outputs:outz
                    float2 ui:nodegraph:node:pos = (-1311.4851, 391.87555)
                    int ui:nodegraph:node:stackingOrder = 1172
                }

                def Shader "UnlitSurface"
                {
                    uniform token info:id = "ND_realitykit_unlit_surfaceshader"
                    bool inputs:applyPostProcessToneMap
                    color3f inputs:color.connect = </Root/Sky_Dome/Looks/DomeMATSG/Image2D.outputs:out>
                    bool inputs:hasPremultipliedAlpha
                    float inputs:opacity = 0.4
                    float inputs:opacity.connect = </Root/Sky_Dome/Looks/DomeMATSG/Subtract.outputs:out>
                    float inputs:opacityThreshold
                    token outputs:out
                    float2 ui:nodegraph:node:pos = (-233.65851, 107.79404)
                    int ui:nodegraph:node:stackingOrder = 1007
                }

                def Shader "Clamp"
                {
                    uniform token info:id = "ND_clamp_float"
                    float inputs:high = 1
                    float inputs:in.connect = </Root/Sky_Dome/Looks/DomeMATSG/SafePower.outputs:out>
                    float inputs:low = 0.05
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-849.956, 392.70047)
                    int ui:nodegraph:node:stackingOrder = 1181
                }

                def Shader "Multiply"
                {
                    uniform token info:id = "ND_multiply_float"
                    float inputs:in1.connect = </Root/Sky_Dome/Looks/DomeMATSG/Separate3.outputs:outy>
                    float inputs:in2.connect = </Root/Sky_Dome/Looks/DomeMATSG/ConstantFloat.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-1170.016, 414.05966)
                    int ui:nodegraph:node:stackingOrder = 1172
                }

                def Shader "SafePower"
                {
                    uniform token info:id = "ND_safepower_float"
                    float inputs:in1.connect = </Root/Sky_Dome/Looks/DomeMATSG/Multiply.outputs:out>
                    float inputs:in2 = 3
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-1011.3436, 416.3665)
                    int ui:nodegraph:node:stackingOrder = 1172
                }

                def Shader "Subtract"
                {
                    uniform token info:id = "ND_subtract_float"
                    float inputs:in1 = 1
                    float inputs:in1.connect = None
                    float inputs:in2.connect = </Root/Sky_Dome/Looks/DomeMATSG/IfGreater.outputs:out>
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-524.6211, 510.04688)
                    int ui:nodegraph:node:stackingOrder = 1006
                }

                def Shader "ConstantFloat"
                {
                    uniform token info:id = "ND_constant_float"
                    float inputs:value = 0.01
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-1326.7539, 470.0169)
                    int ui:nodegraph:node:stackingOrder = 1172
                }

                def Shader "IfGreater"
                {
                    uniform token info:id = "ND_ifgreater_float"
                    float inputs:in1.connect = </Root/Sky_Dome/Looks/DomeMATSG/Clamp.outputs:out>
                    float inputs:in2 = 1
                    float inputs:value1.connect = </Root/Sky_Dome/Looks/DomeMATSG/Separate3.outputs:outy>
                    float inputs:value2
                    float outputs:out
                    float2 ui:nodegraph:node:pos = (-697.9683, 594.4452)
                    int ui:nodegraph:node:stackingOrder = 1179
                }
            }
        }

        over "Dome_01"
        {
            uniform token subdivisionScheme = "none"
            float3 xformOp:scale = (0.03, 0.03, 0.03)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }
}

