#usda 1.0

def Xform "World" (
    prepend apiSchemas = ["MaterialBindingAPI"]
)
{
    rel material:binding = </World/Rytidosperma_caespitosum_Mat> (
        bindMaterialAs = "strongerThanDescendants"
    )

    def Xform "Assets"
    {
        def Xform "Rytidosperma_caespitosum_2_LOD0" (
            kind = "component"
            prepend references = @models/Rytidosperma caespitosum/LOD0/Rytidosperma_caespitosum_2_LOD0.usdc@
        )
        {
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0, 1, 0), (0, 1, 0, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "Rytidosperma_caespitosum_4_LOD0" (
            kind = "component"
            prepend references = @models/Rytidosperma caespitosum/LOD0/Rytidosperma_caespitosum_4_LOD0.usdc@
        )
        {
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0, 1, 0), (0, 1, 0, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "Rytidosperma_caespitosum_3_LOD0" (
            kind = "component"
            prepend references = @models/Rytidosperma caespitosum/LOD0/Rytidosperma_caespitosum_3_LOD0.usdc@
        )
        {
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0, 1, 0), (0, 1, 0, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }

        def Xform "Rytidosperma_caespitosum_1_LOD0" (
            kind = "component"
            prepend references = @models/Rytidosperma caespitosum/LOD0/Rytidosperma_caespitosum_1_LOD0.usdc@
        )
        {
            token visibility = "invisible"
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 0, 1, 0), (0, 1, 0, 0), (0, 0, 0, 1) )
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Xform "Instance_0_1_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0350845, 1.0350845, 1.0350845)
        double3 xformOp:translate = (-1.6013615131378174, 0, -1.0013614892959595)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_0_2_Rytidosperma_caespitosum_1_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_1_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.8236867, 0.8236867, 0.8236867)
        double3 xformOp:translate = (-1.776043176651001, 0, -0.5760431885719299)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_0_3_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.9697315, 0.9697315, 0.9697315)
        double3 xformOp:translate = (-2.027158737182617, 0, -0.227158784866333)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_0_4_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.81135327, 0.81135327, 0.81135327)
        double3 xformOp:translate = (-1.7882031202316284, 0, 0.6117967963218689)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_0_5_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0072916, 1.0072916, 1.0072916)
        double3 xformOp:translate = (-1.78908109664917, 0, 1.21091890335083)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_1_0_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0346197, 1.0346197, 1.0346197)
        double3 xformOp:translate = (-1.1510719060897827, 0, -1.7510719299316406)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_1_1_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0284203, 1.0284203, 1.0284203)
        double3 xformOp:translate = (-1.3812106847763062, 0, -1.3812106847763062)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_1_2_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.1594862, 1.1594862, 1.1594862)
        double3 xformOp:translate = (-1.371097207069397, 0, -0.7710972428321838)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_1_3_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0658891, 1.0658891, 1.0658891)
        double3 xformOp:translate = (-1.1826756000518799, 0, 0.017324399203062057)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_1_4_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.1117823, 1.1117823, 1.1117823)
        double3 xformOp:translate = (-1.2637864351272583, 0, 0.5362135171890259)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_1_5_Rytidosperma_caespitosum_1_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_1_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0777975, 1.0777975, 1.0777975)
        double3 xformOp:translate = (-0.9180786609649658, 0, 1.4819213151931763)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_2_0_Rytidosperma_caespitosum_1_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_1_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.94384414, 0.94384414, 0.94384414)
        double3 xformOp:translate = (-0.48810675740242004, 0, -1.6881067752838135)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_2_1_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0603547, 1.0603547, 1.0603547)
        double3 xformOp:translate = (-0.3639322817325592, 0, -0.9639322757720947)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_2_2_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0830009, 1.0830009, 1.0830009)
        double3 xformOp:translate = (-0.44629576802253723, 0, -0.44629576802253723)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_2_4_Rytidosperma_caespitosum_2_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_2_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.9082582, 0.9082582, 0.9082582)
        double3 xformOp:translate = (-0.7328317761421204, 0, 0.4671682119369507)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_2_5_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.89731306, 0.89731306, 0.89731306)
        double3 xformOp:translate = (-0.6385175585746765, 0, 1.1614824533462524)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_3_0_Rytidosperma_caespitosum_2_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_2_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.8046735, 0.8046735, 0.8046735)
        double3 xformOp:translate = (0.15957272052764893, 0, -1.6404272317886353)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_3_1_Rytidosperma_caespitosum_2_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_2_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.8468482, 0.8468482, 0.8468482)
        double3 xformOp:translate = (-0.174417644739151, 0, -1.3744176626205444)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_3_3_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.8484808, 0.8484808, 0.8484808)
        double3 xformOp:translate = (-0.12492791563272476, 0, -0.12492791563272476)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_3_4_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0251516, 1.0251516, 1.0251516)
        double3 xformOp:translate = (-0.19121193885803223, 0, 0.4087880551815033)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_3_5_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.1452409, 1.1452409, 1.1452409)
        double3 xformOp:translate = (-0.2374708354473114, 0, 0.962529182434082)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_4_0_Rytidosperma_caespitosum_2_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_2_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0555842, 1.0555842, 1.0555842)
        double3 xformOp:translate = (0.4052583873271942, 0, -1.9947415590286255)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_4_1_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.1483691, 1.1483691, 1.1483691)
        double3 xformOp:translate = (0.6917877793312073, 0, -1.1082122325897217)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_4_2_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.8919338, 0.8919338, 0.8919338)
        double3 xformOp:translate = (0.7299073338508606, 0, -0.47009268403053284)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_4_3_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.93751, 0.93751, 0.93751)
        double3 xformOp:translate = (0.7277501821517944, 0, 0.12775017321109772)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_4_4_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0008413, 1.0008413, 1.0008413)
        double3 xformOp:translate = (0.42211925983428955, 0, 0.42211925983428955)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_4_5_Rytidosperma_caespitosum_3_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_3_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0659343, 1.0659343, 1.0659343)
        double3 xformOp:translate = (0.6921679973602295, 0, 1.2921680212020874)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_5_0_Rytidosperma_caespitosum_4_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_4_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0519495, 1.0519495, 1.0519495)
        double3 xformOp:translate = (1.4949991703033447, 0, -1.5050008296966553)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_5_1_Rytidosperma_caespitosum_2_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_2_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0604596, 1.0604596, 1.0604596)
        double3 xformOp:translate = (1.2262930870056152, 0, -1.1737068891525269)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_5_3_Rytidosperma_caespitosum_1_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_1_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (0.8338091, 0.8338091, 0.8338091)
        double3 xformOp:translate = (1.442520022392273, 0, 0.2425200641155243)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_5_4_Rytidosperma_caespitosum_1_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_1_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.0466807, 1.0466807, 1.0466807)
        double3 xformOp:translate = (1.2093561887741089, 0, 0.6093561053276062)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Xform "Instance_5_5_Rytidosperma_caespitosum_2_LOD0" (
        instanceable = true
        prepend references = </World/Assets/Rytidosperma_caespitosum_2_LOD0>
    )
    {
        token visibility = "inherited"
        float3 xformOp:rotateXYZ = (0, 90, 90)
        float3 xformOp:scale = (1.1732662, 1.1732662, 1.1732662)
        double3 xformOp:translate = (1.143200397491455, 0, 1.143200397491455)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Material "Rytidosperma_caespitosum_Mat"
    {
        reorder nameChildren = ["PBRSurface", "Dot", "Dot_2", "Image2D", "Dot_1", "Image2D_1", "Separate4", "Grass_Animation"]
        token cullMode = "none" (
            allowedTokens = ["unspecified", "none", "front", "back"]
        )
        asset inputs:AlphaMap = @Rytidosperma caespitosum-alpha.png@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-684.1396, -150.91136)
                    int stackingOrderInSubgraph = 1095
                }
            }
        )
        float inputs:Amplitude = 0.4 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-41.54184, 248.66017)
                    int stackingOrderInSubgraph = 1173
                }
            }
        )
        asset inputs:ColorMap = @models/Rytidosperma caespitosum/LOD0/textures/Rytidosperma caespitosum.png@ (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-524.8635, -483.09747)
                    int stackingOrderInSubgraph = 427
                }
            }
        )
        float inputs:Speed = 1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-45.503746, 317.8309)
                    int stackingOrderInSubgraph = 1173
                }
            }
        )
        float3 inputs:WindDirection = (1, 0, 0) (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-67.44906, 396.8387)
                    int stackingOrderInSubgraph = 1175
                }
            }
        )
        token outputs:mtlx:surface.connect = </World/Rytidosperma_caespitosum_Mat/PBRSurface.outputs:out>
        token outputs:realitykit:vertex.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation.outputs:Displace>
        float2 ui:nodegraph:node:pos = (55.550888, -66.630264)
        int ui:nodegraph:node:stackingOrder = 6
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (430.98355, 118.836945)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 677

        def Shader "PBRSurface"
        {
            uniform token info:id = "ND_realitykit_pbr_surfaceshader"
            float inputs:ambientOcclusion
            color3f inputs:baseColor.connect = </World/Rytidosperma_caespitosum_Mat/Dot_2.outputs:out>
            float inputs:clearcoat
            float3 inputs:clearcoatNormal
            float inputs:clearcoatRoughness
            color3f inputs:emissiveColor
            bool inputs:hasPremultipliedAlpha
            float inputs:metallic
            float3 inputs:normal.connect = </World/Rytidosperma_caespitosum_Mat/Dot_1.outputs:out>
            float inputs:opacity.connect = </World/Rytidosperma_caespitosum_Mat/Dot.outputs:out>
            float inputs:opacityThreshold = 0.1
            float inputs:roughness = 0.5
            float inputs:specular
            token outputs:out
            float2 ui:nodegraph:node:pos = (122.91724, -5.484755)
            int ui:nodegraph:node:stackingOrder = 1171
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:normal"]
        }

        def Shader "Dot"
        {
            uniform token info:id = "ND_dot_float"
            float inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Separate4.outputs:outx>
            float outputs:out
            float2 ui:nodegraph:node:pos = (-68.41439, 114.68096)
            int ui:nodegraph:node:stackingOrder = 1089
        }

        def Shader "Dot_2"
        {
            uniform token info:id = "ND_dot_color3"
            color3f inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Image2D.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-74.97684, -99.29204)
            int ui:nodegraph:node:stackingOrder = 504
        }

        def Shader "Image2D"
        {
            uniform token info:id = "ND_RealityKitTexture2D_color3"
            float inputs:bias
            string inputs:border_color = "transparent_black"
            color3f inputs:default
            float inputs:dynamic_min_lod_clamp
            asset inputs:file.connect = </World/Rytidosperma_caespitosum_Mat.inputs:ColorMap>
            string inputs:mag_filter
            int inputs:max_anisotropy
            float inputs:max_lod_clamp = 65504
            string inputs:min_filter
            float inputs:min_lod_clamp
            string inputs:mip_filter
            bool inputs:no_flip_v = 1
            int2 inputs:offset
            float2 inputs:texcoord
            string inputs:u_wrap_mode
            string inputs:v_wrap_mode
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-313.45416, -503.9556)
            int ui:nodegraph:node:stackingOrder = 1107
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:dynamic_min_lod_clamp"]
        }

        def Shader "Dot_1"
        {
            uniform token info:id = "ND_dot_vector3"
            float3 inputs:in.connect = None
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (-76.61219, -64.75849)
            int ui:nodegraph:node:stackingOrder = 718
        }

        def Shader "Image2D_1"
        {
            uniform token info:id = "ND_RealityKitTexture2D_vector4"
            float inputs:bias
            string inputs:border_color
            float4 inputs:default
            float inputs:dynamic_min_lod_clamp
            asset inputs:file.connect = </World/Rytidosperma_caespitosum_Mat.inputs:AlphaMap>
            string inputs:mag_filter
            int inputs:max_anisotropy
            float inputs:max_lod_clamp
            float inputs:min_lod_clamp
            bool inputs:no_flip_v = 1
            int2 inputs:offset
            float2 inputs:texcoord
            string inputs:u_wrap_mode
            string inputs:v_wrap_mode
            float4 outputs:out
            float2 ui:nodegraph:node:pos = (-464.26138, -29.25302)
            int ui:nodegraph:node:stackingOrder = 1100
        }

        def Shader "Separate4"
        {
            uniform token info:id = "ND_separate4_vector4"
            float4 inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Image2D_1.outputs:out>
            float outputs:outw
            float outputs:outx
            float outputs:outy
            float outputs:outz
            float2 ui:nodegraph:node:pos = (-219.18825, 142.97026)
            int ui:nodegraph:node:stackingOrder = 1086
        }

        def NodeGraph "Grass_Animation"
        {
            float inputs:Amplitude = 0.7 (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-859.66864, 88.08858)
                        int stackingOrderInSubgraph = 1577
                    }
                }
            )
            float inputs:Amplitude.connect = None
            float inputs:Speed = 0.7 (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-1377.7136, 42.31363)
                        int stackingOrderInSubgraph = 1997
                    }
                }
            )
            float inputs:Speed.connect = None
            float3 inputs:Wind_Direction = (1, 0, 0) (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-1247.8134, 327.76813)
                        int stackingOrderInSubgraph = 2183
                    }
                }
            )
            float3 inputs:Wind_Direction.connect = None
            token outputs:Displace (
                customData = {
                    dictionary realitykit = {
                        float2 positionInSubgraph = (-16, 71.5)
                        int stackingOrderInSubgraph = 2
                    }
                }
            )
            token outputs:Displace.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/GeometryModifier.outputs:out>
            float2 ui:nodegraph:node:pos = (188.25552, 252.4837)
            int ui:nodegraph:node:stackingOrder = 1172
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (80.23828, 130.08203)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 15

            def Shader "GeometryModifier"
            {
                uniform token info:id = "ND_realitykit_geometrymodifier_2_0_vertexshader"
                float3 inputs:bitangent
                color4f inputs:color
                float3 inputs:modelPositionOffset.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply_4.outputs:out>
                float3 inputs:normal
                float2 inputs:uv0
                float2 inputs:uv1
                float4 inputs:uv5
                float4 inputs:uv6
                float4 inputs:uv7
                token outputs:out
                float2 ui:nodegraph:node:pos = (-187.85938, 25.742188)
                int ui:nodegraph:node:stackingOrder = 2034
            }

            def Shader "Multiply_1"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Add.outputs:out>
                float inputs:in2.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation.inputs:Speed>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1256.8992, -8.679611)
                int ui:nodegraph:node:stackingOrder = 1049
            }

            def Shader "Position"
            {
                uniform token info:id = "ND_position_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1470.9783, 131.75777)
                int ui:nodegraph:node:stackingOrder = 1939
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1 = 1
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Sin.outputs:out>
                float inputs:in2 = 4
                float inputs:in2.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-900.7302, 0.046179295)
                int ui:nodegraph:node:stackingOrder = 920
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Separate3"
            {
                uniform token info:id = "ND_separate3_vector3"
                float3 inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Position.outputs:out>
                float outputs:outx
                float outputs:outy
                float outputs:outz
                float2 ui:nodegraph:node:pos = (-1290.1428, 131.73871)
                int ui:nodegraph:node:stackingOrder = 1939
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:outy"]
            }

            def Shader "Time"
            {
                uniform token info:id = "ND_time_float"
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1479.3828, -27.816406)
                int ui:nodegraph:node:stackingOrder = 2191
            }

            def Shader "Divide_1"
            {
                uniform token info:id = "ND_divide_float"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation.inputs:Amplitude>
                float inputs:in2 = 10
                float outputs:out
                float2 ui:nodegraph:node:pos = (-745.96576, 96.82498)
                int ui:nodegraph:node:stackingOrder = 1577
            }

            def Shader "Multiply_3"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply_2.outputs:out>
                float inputs:in2 = 1
                float inputs:in2.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Divide_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-679.14453, 7.131611)
                int ui:nodegraph:node:stackingOrder = 1498
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:in2"]
            }

            def Shader "Sin"
            {
                uniform token info:id = "ND_sin_float"
                float inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply_1.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1098.6484, -9.0234375)
                int ui:nodegraph:node:stackingOrder = 1993
            }

            def Shader "Power"
            {
                uniform token info:id = "ND_power_float"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Separate3.outputs:outy>
                float inputs:in2 = 2
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1120.1147, 140.62814)
                int ui:nodegraph:node:stackingOrder = 1939
            }

            def Shader "Multiply"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Power.outputs:out>
                float inputs:in2 = 0.01
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1004.11847, 149.43727)
                int ui:nodegraph:node:stackingOrder = 1939
            }

            def Shader "Multiply_4"
            {
                uniform token info:id = "ND_multiply_vector3"
                float3 inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Combine3.outputs:out>
                float3 inputs:in2.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Normalize.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-388.16406, -54.472656)
                int ui:nodegraph:node:stackingOrder = 1996
            }

            def Shader "Combine3"
            {
                uniform token info:id = "ND_combine3_vector3"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply_3.outputs:out>
                float inputs:in2.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply_3.outputs:out>
                float inputs:in3.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply_3.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-532.01953, -57.277344)
                int ui:nodegraph:node:stackingOrder = 2014
            }

            def Shader "ConstantFloat3"
            {
                uniform token info:id = "ND_constant_vector3"
                float3 inputs:value = (1, 0, 0)
                float3 inputs:value.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation.inputs:Wind_Direction>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-994.9196, 329.34637)
                int ui:nodegraph:node:stackingOrder = 2181
            }

            def Shader "TransformVector"
            {
                uniform token info:id = "ND_transformvector_vector3"
                string inputs:fromspace = "world"
                float3 inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/ConstantFloat3.outputs:out>
                string inputs:tospace = "object"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-749.53485, 346.72104)
                int ui:nodegraph:node:stackingOrder = 2176
            }

            def Shader "Normalize"
            {
                uniform token info:id = "ND_normalize_vector3"
                float3 inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/TransformVector.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-535.3722, 347.17853)
                int ui:nodegraph:node:stackingOrder = 2176
            }

            def Shader "Add"
            {
                uniform token info:id = "ND_add_float"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Multiply_5.outputs:out>
                float inputs:in2.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Time.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1314.9492, -93.921875)
                int ui:nodegraph:node:stackingOrder = 2197
            }

            def Shader "Multiply_5"
            {
                uniform token info:id = "ND_multiply_float"
                float inputs:in1.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Separate3_1.outputs:outz>
                float inputs:in2 = 0.1
                float outputs:out
                float2 ui:nodegraph:node:pos = (-1396.8281, -120.96094)
                int ui:nodegraph:node:stackingOrder = 2280
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Position_1"
            {
                uniform token info:id = "ND_position_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (-1748.9883, -130.07422)
                int ui:nodegraph:node:stackingOrder = 2223
            }

            def Shader "Separate3_1"
            {
                uniform token info:id = "ND_separate3_vector3"
                float3 inputs:in.connect = </World/Rytidosperma_caespitosum_Mat/Grass_Animation/Position_1.outputs:out>
                float outputs:outx
                float outputs:outy
                float outputs:outz
                float2 ui:nodegraph:node:pos = (-1564.457, -130.6914)
                int ui:nodegraph:node:stackingOrder = 2225
            }
        }
    }
}

