#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    def Capsule "Capsule" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/Capsule/DefaultMaterial>
        double radius = 0.1

        def Material "DefaultMaterial"
        {
            prepend token outputs:surface.connect = </Root/Capsule/DefaultMaterial/DefaultSurfaceShader.outputs:surface>

            def Shader "DefaultSurfaceShader"
            {
                uniform token info:id = "UsdPreviewSurface"
                color3f inputs:diffuseColor = (1, 1, 1)
                float inputs:roughness = 0.75
                token outputs:surface
            }
        }
    }

    def "grass_patch_3" (
        active = true
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float3 xformOp:translate = (30, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "grass_patch_4" (
        active = true
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        float3 xformOp:translate = (30, 0, -30)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "grass_patch_5" (
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float2 ui:nodegraph:node:pos = (40, 40)
        int ui:nodegraph:node:stackingOrder = 2
        float3 xformOp:translate = (-30, 0, -30)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "grass_patch_6" (
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float2 ui:nodegraph:node:pos = (60, 60)
        int ui:nodegraph:node:stackingOrder = 3
        float3 xformOp:translate = (0, 0, -30)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "grass_patch_7" (
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float2 ui:nodegraph:node:pos = (80, 80)
        int ui:nodegraph:node:stackingOrder = 4
        float3 xformOp:translate = (0, 0, 30)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "grass_patch_8" (
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float2 ui:nodegraph:node:pos = (100, 100)
        int ui:nodegraph:node:stackingOrder = 5
        float3 xformOp:translate = (30, 0, 30)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "grass_patch_9" (
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float2 ui:nodegraph:node:pos = (120, 120)
        int ui:nodegraph:node:stackingOrder = 6
        float3 xformOp:translate = (-30, 0, 30)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "grass_patch_10" (
        active = true
        prepend references = @grass_patch_3.usda@</World>
    )
    {
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        float3 xformOp:translate = (-30, 0, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }
}

