#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "NodeGraph"
    metersPerUnit = 1
    upAxis = "Y"
)

def NodeGraph "NodeGraph" (
    active = true
)
{
    float inputs:DirectionAngle = 160 (
        customData = {
            dictionary realitykit = {
                float2 positionInSubgraph = (-1170.8646, 75.890305)
                int stackingOrderInSubgraph = 730
            }
        }
    )
    float outputs:Darkness (
        customData = {
            dictionary realitykit = {
                float2 positionInSubgraph = (-16, 71.5)
                int stackingOrderInSubgraph = 1
            }
        }
    )
    float outputs:Darkness.connect = </NodeGraph/Clamp.outputs:out>
    float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (397.94818, 62.949986)
    int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 715

    def Shader "RampVertical"
    {
        uniform token info:id = "ND_ramptb_float"
        float2 inputs:texcoord.connect = </NodeGraph/Combine2.outputs:out>
        float inputs:valueb = 0
        float inputs:valuet = 1
        float outputs:out
        float2 ui:nodegraph:node:pos = (-110.56745, -13.2531395)
        int ui:nodegraph:node:stackingOrder = 424
    }

    def Shader "Position"
    {
        uniform token info:id = "ND_position_vector3"
        string inputs:space = "model"
        float3 outputs:out
        float2 ui:nodegraph:node:pos = (-1644.5013, -55.328445)
        int ui:nodegraph:node:stackingOrder = 660
    }

    def Shader "Separate3"
    {
        uniform token info:id = "ND_separate3_vector3"
        float3 inputs:in.connect = </NodeGraph/Add.outputs:out>
        float outputs:outx
        float outputs:outy
        float outputs:outz
        float2 ui:nodegraph:node:pos = (-501.39166, 21.07108)
        int ui:nodegraph:node:stackingOrder = 415
    }

    def Shader "Combine2"
    {
        uniform token info:id = "ND_combine2_vector2"
        float inputs:in1.connect = </NodeGraph/Separate3.outputs:outx>
        float inputs:in2.connect = </NodeGraph/Separate3.outputs:outz>
        float2 outputs:out
        float2 ui:nodegraph:node:pos = (-304.4815, 20.367954)
        int ui:nodegraph:node:stackingOrder = 417
    }

    def Shader "Rotate3D"
    {
        uniform token info:id = "ND_rotate3d_vector3"
        float inputs:amount.connect = </NodeGraph.inputs:DirectionAngle>
        float3 inputs:axis
        float3 inputs:in.connect = </NodeGraph/Rotate3D_1.outputs:out>
        float3 outputs:out
        float2 ui:nodegraph:node:pos = (-936.8529, 74.952805)
        int ui:nodegraph:node:stackingOrder = 725
    }

    def Shader "TransformVector"
    {
        uniform token info:id = "ND_transformvector_vector3"
        string inputs:fromspace = "model"
        float3 inputs:in.connect = </NodeGraph/Position.outputs:out>
        string inputs:tospace = "world"
        float3 outputs:out
        float2 ui:nodegraph:node:pos = (-1398.2592, -37.504227)
        int ui:nodegraph:node:stackingOrder = 660
    }

    def Shader "Rotate3D_1"
    {
        uniform token info:id = "ND_rotate3d_vector3"
        float inputs:amount = 10
        float3 inputs:axis = (1, 0, 0)
        float3 inputs:in.connect = </NodeGraph/TransformVector.outputs:out>
        float3 outputs:out
        float2 ui:nodegraph:node:pos = (-1126.3373, -18.097977)
        int ui:nodegraph:node:stackingOrder = 665
    }

    def Shader "Normalize"
    {
        uniform token info:id = "ND_normalize_vector3"
        float3 inputs:in.connect = </NodeGraph/Rotate3D.outputs:out>
        float3 outputs:out
        float2 ui:nodegraph:node:pos = (-764.2324, 21.02212)
        int ui:nodegraph:node:stackingOrder = 660
    }

    def Shader "Clamp"
    {
        uniform token info:id = "ND_clamp_float"
        float inputs:high = 0.9
        float inputs:in.connect = </NodeGraph/RampVertical.outputs:out>
        float inputs:low
        float outputs:out
        float2 ui:nodegraph:node:pos = (182.6435, 20.801548)
        int ui:nodegraph:node:stackingOrder = 715
    }

    def Shader "Add"
    {
        uniform token info:id = "ND_add_vector3"
        float3 inputs:in1.connect = </NodeGraph/Normalize.outputs:out>
        float3 inputs:in2 = (0, 0, 0.3)
        float3 outputs:out
        float2 ui:nodegraph:node:pos = (-637.98047, 29.980469)
        int ui:nodegraph:node:stackingOrder = 856
    }
}

